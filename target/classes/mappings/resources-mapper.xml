<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiangtai.framework.core.mapper.ResourcesMapper">
    <!--mybatis ehcache缓存配置 -->
	<!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 <cache type="org.mybatis.caches.ehcache.LoggingEhcache" 
		/> -->
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<sql id="selectId">
		id,
		name,
		parentId,
		(select r.name from ly_resources r where r.id = ly_resources.parentId )
		parentName,
		resKey,
		ishide,
		type,
		resUrl,
		level,
		icon,
		description
	</sql>
	<select id="findChildlists" resultType="com.xiangtai.framework.core.entity.ResFormMap">
		SELECT
		<include refid="selectId" />
		from ly_resources
		where parentId = #{id}
	</select>
	<!-- 获取该用户的权限 -->
	<select id="findRes" parameterType="String" resultType="com.xiangtai.framework.core.entity.ResFormMap">
		SELECT
		<include refid="selectId" />
		,resu.dataAuthority dataAuthority
		from ly_resources
		LEFT JOIN (
		SELECT
		ly_res_user.resId,
		MAX(ly_res_user.dataAuthority) dataAuthority
		FROM
		ly_res_user
		WHERE
		userId IN (
		SELECT
		userId
		FROM
		ly_user_role
		WHERE
		roleId = #{roleId}
		)
		GROUP BY
		ly_res_user.resId
		) resu ON ly_resources.id = resu.resId
		where id in(
		select resId from
		ly_res_user where 1=1
		<if test="userId != null and userId != '' and userId != 0">
		and userId = #{userId}
		</if>
		<if test="roleId != null and roleId != '' and roleId != 0">
		and userId in (
		      SELECT userId from ly_user_role where roleId = #{roleId}
		   )
		</if>
		)
		<if test="parentId != null and parentId != '' and parentId != 0">
			and parentId = #{parentId}
		</if>
		order by level asc
	</select>


    <!-- 获取该角色的权限 -->
    <select id="findRes2" parameterType="String" resultType="com.xiangtai.framework.core.entity.ResFormMap">
        SELECT
        <include refid="selectId" />
        ,resu.dataAuthority dataAuthority
        from ly_resources
        RIGHT JOIN (
        SELECT
        ly_res_user.resId,
        MIN(ly_res_user.dataAuthority) dataAuthority
        FROM
        ly_res_user
        WHERE 1=1
        <if test="roleId != null and roleId != '' and roleId != 0">
          AND  roleId = #{roleId}
        </if>
        <choose>
            <when test="userId != null and userId != '' and userId != 0">
                and userId = #{userId}
            </when>
            <otherwise>
                and type = "01"
            </otherwise>
        </choose>
        GROUP BY
        ly_res_user.resId
        ) resu ON ly_resources.id = resu.resId
        order by level asc
    </select>

	<!-- 根据账号Id获取该用户的权限 -->
	<select id="findUserResourcess" parameterType="String"
		resultType="com.xiangtai.framework.core.entity.ResFormMap">
		SELECT
		<include refid="selectId" />
		from ly_resources where id in(
		select resId from ly_res_user
		where userId=#{userId})
	</select>
    <!-- 查询角色权限 -->
    <select id="findRoleReByRoleId" parameterType="com.xiangtai.framework.core.entity.UserGroupsFormMap"
            resultType="com.xiangtai.framework.core.entity.ResUserFormMap">
      SELECT * FROM  ly_res_user
      WHERE ly_res_user.roleId =#{roleId} AND ly_res_user.type="01"

    </select>


    <update id="updateSortOrder" parameterType="java.util.List">
          <foreach collection="list" item="item" index="index" open="" close="" separator=";">
                update ly_resources
                <set>
                  level = #{item.level}
                </set>
                where id = #{item.id}
         </foreach>
	</update>
	<!-- 删 -->
	<delete id="deleteResourcesRole" parameterType="String">
		delete from
		ly_res_roles
		where role_id=#{id}
	</delete>
    <!-- 根据角色id,用户id删除用户权限设置 -->
	<delete id="deleteByUserIdRoleId" parameterType="com.xiangtai.framework.core.entity.ResUserFormMap">
		delete from
		ly_res_user
		where roleId=#{roleId} and userId =#{userId}
	</delete>

    <!-- 根据角色Id删除 角色权限设置 -->
    <delete id="deleteByRoleIdType" parameterType="String">
        delete from
        ly_res_user
        where  roleId=#{roleId}  AND  TYPE = "01"
    </delete>

	<insert id="addRoleRes">
		insert into ly_res_roles (role_id,resc_id) value (#{roleId},#{resId})
	</insert>

    <select id="getdataAuthorityByResKey" resultType="String" parameterType = "java.util.HashMap">
    SELECT
        MIN(ly_res_user.dataAuthority) dataAuthority
    FROM
        ly_res_user
    WHERE
        ly_res_user.userId = #{userId}
    AND ly_res_user.resId = (
        SELECT
            ly_resources.id
        FROM
            ly_resources
        WHERE ly_resources.resKey=#{resKey} )
    </select>


</mapper>